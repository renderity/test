{
	"variables":
	{
		"gcc-x64":
		{
			"LIBS": "/home/denis/libs",
			"REPS": "/home/denis/reps"
		}
	},

	"entries":
	{
		// For standalone build
		"type": "bin",

		// // For electron build
		// "type": "static",

		"name": "test",

		"include_directories":
		[
			// For renderity includes
			"$(REPS)",

			// For glslang internal includes, which itself is included in renderity renderers
			"$(REPS)/KhronosGroup/glslang",

			// For renderity internal includes
			"$(REPS)/renderity",

			// For glad internal includes
			"$(REPS)/renderity/renderers/src/glad/include"
		],

		"system_libraries":
		[
			"dl",
			"pthread",
			"X11",
			"Xrandr",
			"Xxf86vm",
			"Xi",
			"Xinerama",
			"Xcursor"
		],

		"flags": "$(STD_20) $(NO_LINK) $(VERBOSE) $(OPT_FASTX) $(SSE) $(FLAGS_ADD) -fPIC",

		"watch_files":
		[
			{
				"file": "$(SRC)/main.cpp",

				"watch_files":
				[
					"$(REPS)/renderity/math/src/mat4/mat4.h",
					"$(REPS)/renderity/math/src/orbit/orbit.h",
					"$(REPS)/renderity/math/src/util/util.h",

					"$(REPS)/renderity/aux/src/transition-stack/transition-stack.h",
					"$(REPS)/renderity/aux/src/transition/transition.h",

					"$(REPS)/renderity/wrappers/src/uniform/uniform.h",
					"$(REPS)/renderity/wrappers/src/uniform-block/uniform-block.h",
					"$(REPS)/renderity/wrappers/src/descriptor-set/descriptor-set.h",
					"$(REPS)/renderity/wrappers/src/material/material.h",
					"$(REPS)/renderity/wrappers/src/object/object.h",
					"$(REPS)/renderity/wrappers/src/scene/scene.h"
				]
			},

			{
				"file": "$(SRC)/renderer-native.cpp",

				"watch_files":
				[
					"$(REPS)/renderity/renderers/src/base/renderer.h"
				]
			},

			{
				"file": "$(SRC)/opengl.cpp",

				"watch_files":
				[
					"$(REPS)/renderity/wrappers/src/renderer/renderer.h",
					"$(REPS)/renderity/wrappers/src/uniform/uniform.h",
					"$(REPS)/renderity/wrappers/src/uniform-block/uniform-block.h",
					"$(REPS)/renderity/wrappers/src/material/material.h",
					"$(REPS)/renderity/wrappers/src/object/object.h",
					"$(REPS)/renderity/wrappers/src/scene/scene.h",

					"$(REPS)/renderity/renderers/src/base/renderer.h",
					"$(REPS)/renderity/renderers/src/opengl/opengl.h"
				]
			},

			{
				"file": "$(SRC)/vulkan.cpp",

				"watch_files":
				[
					"$(REPS)/renderity/wrappers/src/renderer/renderer.h",
					"$(REPS)/renderity/wrappers/src/uniform/uniform.h",
					"$(REPS)/renderity/wrappers/src/uniform-block/uniform-block.h",
					"$(REPS)/renderity/wrappers/src/descriptor-set/descriptor-set.h",
					"$(REPS)/renderity/wrappers/src/material/material.h",
					"$(REPS)/renderity/wrappers/src/object/object.h",
					"$(REPS)/renderity/wrappers/src/scene/scene.h",

					"$(REPS)/renderity/renderers/src/base/renderer.h",
					"$(REPS)/renderity/renderers/src/vulkan/vulkan.h"
				]
			},

			{
				"file": "$(REPS)/renderity/math/build/$(ENV)/output/$(LIB_EXT)/math.$(LIB_EXT)",
				"watch_directories": "$(REPS)/renderity/math/src",
				"do": "genmake $(ENV) $(REPS)/renderity/math/genmake.json"
			},

			{
				"file": "$(REPS)/renderity/aux/build/$(ENV)/output/$(LIB_EXT)/aux.$(LIB_EXT)",
				"watch_directories": "$(REPS)/renderity/aux/src",
				"do": "genmake $(ENV) $(REPS)/renderity/aux/genmake.json"
			},

			{
				"file": "$(REPS)/renderity/wrappers/build/$(ENV)/output/$(LIB_EXT)/wrappers.$(LIB_EXT)",
				"watch_directories": "$(REPS)/renderity/wrappers/src",
				"do": "genmake $(ENV) $(REPS)/renderity/wrappers/genmake.json"
			},

			{
				"file": "$(REPS)/renderity/renderers/build/$(ENV)/output/$(LIB_EXT)/renderers.$(LIB_EXT)",
				"do": "genmake $(ENV) $(REPS)/renderity/renderers/genmake.json",

				"watch_files3":
				[
					"$(REPS)/renderity/renderers/src/base/renderer.h",
					"$(REPS)/renderity/renderers/src/opengl/opengl.cpp",
					"$(REPS)/renderity/renderers/src/opengl/opengl.h",
					"$(REPS)/renderity/renderers/src/vulkan/vulkan.cpp",
					"$(REPS)/renderity/renderers/src/vulkan/vulkan.h"
				]
			}
		]
	}
}
